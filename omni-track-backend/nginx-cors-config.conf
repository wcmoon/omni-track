# Nginx CORS配置 - 适用于移动应用
# 将此配置添加到 /etc/nginx/sites-available/api.timeweave.xyz

server {
    listen 443 ssl http2;
    server_name api.timeweave.xyz;

    # SSL配置...（保持原有配置）

    location /api {
        # 移动应用友好的CORS配置
        
        # 处理预检请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # 允许所有源（移动应用友好）
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
        
        # 代理设置
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 增加超时时间（邮件发送可能需要较长时间）
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# 如果需要更严格的控制，可以使用map来动态设置CORS
map $http_origin $cors_origin {
    default "";
    ~^https?://localhost(:[0-9]+)?$ $http_origin;
    ~^capacitor://localhost$ $http_origin;
    ~^ionic://localhost$ $http_origin;
    ~^file://$ $http_origin;
    ~^https?://.*\.timeweave\.(xyz|com)$ $http_origin;
}

# 然后使用：
# add_header 'Access-Control-Allow-Origin' $cors_origin always;